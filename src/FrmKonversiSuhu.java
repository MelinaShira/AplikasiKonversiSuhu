
import java.awt.AlphaComposite;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author LENOVO
 */
public class FrmKonversiSuhu extends javax.swing.JFrame {

    /**
     * Creates new form FrmKonversiSuhu
     */
    public FrmKonversiSuhu() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Aplikasi Konversi Suhu");
    }

public class BackgroundPanel extends JPanel {
    private final Image image;

    public BackgroundPanel() {
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/background.PNG"));
        image = icon.getImage();
        setOpaque(true);
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/background.PNG"));
        Image image = icon.getImage();

        // Ubah Graphics biasa ke Graphics2D
        Graphics2D g2d = (Graphics2D) g.create();

        // Atur level transparansi (0.0f = transparan penuh, 1.0f = solid)
        float opacity = 0.5f; // Ubah nilainya sesuai keinginanmu

        g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, opacity));
        g2d.drawImage(image, 0, 0, getWidth(), getHeight(), this);

        g2d.dispose();
    }
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupMode1 = new javax.swing.ButtonGroup();
        jPanel1 = new BackgroundPanel();
        judul = new javax.swing.JLabel();
        input = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        asal = new javax.swing.JLabel();
        tujuan = new javax.swing.JLabel();
        cmbSkalaAsal = new javax.swing.JComboBox<>();
        cmbSkalaTujuan = new javax.swing.JComboBox<>();
        mode = new javax.swing.JLabel();
        rbManual = new javax.swing.JRadioButton();
        rbOtomatis = new javax.swing.JRadioButton();
        btnKonversi = new javax.swing.JButton();
        hasil = new javax.swing.JLabel();
        lblHasil = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        judul.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        judul.setText("Aplikasi Konversi Suhu");

        input.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        input.setText("Masukkan Suhu   : ");

        txtInput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInputKeyTyped(evt);
            }
        });

        asal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        asal.setText("Dari   : ");

        tujuan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tujuan.setText("Ke      : ");

        cmbSkalaAsal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbSkalaAsal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Reamur", "Kelvin" }));
        cmbSkalaAsal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSkalaAsalItemStateChanged(evt);
            }
        });

        cmbSkalaTujuan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbSkalaTujuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Reamur", "Kelvin" }));
        cmbSkalaTujuan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSkalaTujuanItemStateChanged(evt);
            }
        });

        mode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mode.setText("Mode                    : ");

        groupMode1.add(rbManual);
        rbManual.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbManual.setText("Manual");
        rbManual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbManualItemStateChanged(evt);
            }
        });

        groupMode1.add(rbOtomatis);
        rbOtomatis.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbOtomatis.setText("Otomatis");
        rbOtomatis.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbOtomatisItemStateChanged(evt);
            }
        });

        btnKonversi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnKonversi.setText("Konversi");
        btnKonversi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKonversiActionPerformed(evt);
            }
        });

        hasil.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hasil.setText("Hasil Konversi      : ");

        lblHasil.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblHasil.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(mode)
                                .addGap(18, 18, 18)
                                .addComponent(rbManual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbOtomatis))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(hasil)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnKonversi))
                                    .addComponent(lblHasil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(input)
                                        .addGap(28, 28, 28)
                                        .addComponent(txtInput))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(asal)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbSkalaAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tujuan)))
                                .addGap(18, 18, 18)
                                .addComponent(cmbSkalaTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(judul)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(judul)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asal)
                    .addComponent(tujuan)
                    .addComponent(cmbSkalaTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSkalaAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mode)
                    .addComponent(rbManual)
                    .addComponent(rbOtomatis))
                .addGap(18, 18, 18)
                .addComponent(btnKonversi)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hasil)
                    .addComponent(lblHasil))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_DELETE && c != '.') {
            evt.consume(); // menolak karakter selain angka dan titik desimal
        }
    }//GEN-LAST:event_txtInputKeyTyped

    private void btnKonversiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKonversiActionPerformed
        // TODO add your handling code here:
        try {
            double input = Double.parseDouble(txtInput.getText());
            String asal = cmbSkalaAsal.getSelectedItem().toString();
            String tujuan = cmbSkalaTujuan.getSelectedItem().toString();
            double hasil = konversiSuhu(input, asal, tujuan);
            lblHasil.setText(String.format("%.2f %s", hasil, tujuan));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid!", "Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnKonversiActionPerformed

    private void txtInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyReleased
        // TODO add your handling code here:
        if (rbOtomatis.isSelected()) {
            jalankanKonversi();
        }
    }//GEN-LAST:event_txtInputKeyReleased

    private void rbManualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbManualItemStateChanged
        // TODO add your handling code here:
        if (rbManual.isSelected()) {
            btnKonversi.setEnabled(true); // aktifkan tombol
        }
    }//GEN-LAST:event_rbManualItemStateChanged

    private void rbOtomatisItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbOtomatisItemStateChanged
        // TODO add your handling code here:
        if (rbOtomatis.isSelected()) {
            btnKonversi.setEnabled(false); // nonaktifkan tombol
            // langsung jalankan konversi jika sudah ada input
            if (!txtInput.getText().isEmpty()) {
                double input = Double.parseDouble(txtInput.getText());
                String asal = cmbSkalaAsal.getSelectedItem().toString();
                String tujuan = cmbSkalaTujuan.getSelectedItem().toString();
                double hasil = konversiSuhu(input, asal, tujuan);
                lblHasil.setText(String.format("%.2f %s", hasil, tujuan));
            }
        }
    }//GEN-LAST:event_rbOtomatisItemStateChanged

    private void cmbSkalaAsalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSkalaAsalItemStateChanged
        // TODO add your handling code here:
        if (rbOtomatis.isSelected()) {
            jalankanKonversi();
        }
    }//GEN-LAST:event_cmbSkalaAsalItemStateChanged

    private void cmbSkalaTujuanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSkalaTujuanItemStateChanged
        // TODO add your handling code here:
        if (rbOtomatis.isSelected()) {
            jalankanKonversi();
        }
    }//GEN-LAST:event_cmbSkalaTujuanItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmKonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmKonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmKonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmKonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmKonversiSuhu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel asal;
    private javax.swing.JButton btnKonversi;
    private javax.swing.JComboBox<String> cmbSkalaAsal;
    private javax.swing.JComboBox<String> cmbSkalaTujuan;
    private javax.swing.ButtonGroup groupMode1;
    private javax.swing.JLabel hasil;
    private javax.swing.JLabel input;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel judul;
    private javax.swing.JLabel lblHasil;
    private javax.swing.JLabel mode;
    private javax.swing.JRadioButton rbManual;
    private javax.swing.JRadioButton rbOtomatis;
    private javax.swing.JLabel tujuan;
    private javax.swing.JTextField txtInput;
    // End of variables declaration//GEN-END:variables

    private double konversiSuhu(double nilai, String asal, String tujuan) {
        double celsius;
        
        switch (asal) {
            case "Celsius": celsius = nilai; break;
            case "Fahrenheit": celsius = (nilai - 32) * 5 / 9; break;
            case "Reamur": celsius = nilai * 5 / 4; break;
            case "Kelvin": celsius = nilai - 273.15; break;
            default: celsius = nilai;
        }
        
        switch (tujuan) {
            case "Celsius": return celsius;
            case "Fahrenheit": return (celsius * 9 / 5) + 32;
            case "Reamur": return celsius * 4 / 5;
            case "Kelvin": return celsius + 273.15;
            default: return celsius;
        }
    }

    private void jalankanKonversi() {
        try {
            if (txtInput.getText().isEmpty()) {
                lblHasil.setText("");
                return;
        }
        double input = Double.parseDouble(txtInput.getText());
        String asal = cmbSkalaAsal.getSelectedItem().toString();
        String tujuan = cmbSkalaTujuan.getSelectedItem().toString();
        double hasil = konversiSuhu(input, asal, tujuan);
        lblHasil.setText(String.format("%.2f %s", hasil, tujuan));
        } catch (NumberFormatException e) {
            lblHasil.setText("Input tidak valid");
        }
    }
}
